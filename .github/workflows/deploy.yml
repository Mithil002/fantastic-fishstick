name: Deploy Test Page to GitHub Pages

# Run on pushes to the main branch
on:
  push:
    branches:
      - main # Or your default branch
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the repository code
      - name: Checkout
        uses: actions/checkout@v4

      # 2. Replace placeholder with the secret value
      #    WARNING: Be VERY careful doing this. Only inject values that are SAFE
      #    to be public. In many real-world cases, you would USE the secret here
      #    to FETCH data during the build, not inject the secret itself.
      #    We are injecting a simple string here for demonstration.
      - name: Replace API Key Placeholder
        # Use sed to find and replace the placeholder text in index.html
        # The ${{ secrets.MY_TEST_API_KEY }} syntax accesses the secret
        run: |
          sed -i "s|__API_KEY_PLACEHOLDER__|${{ secrets.MY_TEST_API_KEY }}|g" index.html
        # Check if replacement worked (optional)
        # run: grep "${{ secrets.MY_TEST_API_KEY }}" index.html || exit 1

      # 3. Setup GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 4. Upload the modified code as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the root directory (where index.html is)
          path: '.'

      # 5. Deploy the artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # This step uses the artifact uploaded in the previous step
